{
  "name": "alpine-peak-chatbot-rag-with-crm",
  "nodes": [
    {
      "parameters": {
        "content": "# 🚀 RAG Webhook Entry Point\n\n## Endpoint Details\n**Path:** `/alpine-peak-chatbot-rag`  \n**Method:** POST  \n**Response:** JSON  \n\n## Expected Payload\n```json\n{\n  \"message\": \"user question\",\n  \"session_id\": \"unique-id\",\n  \"page_context\": \"website\",\n  \"user_data\": {}\n}\n```\n\n## Testing Command\n```bash\ncurl -X POST https://your-n8n.com/webhook/alpine-peak-chatbot-rag \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"message\": \"My email is john@example.com, need estimate\"}'  \n```\n\n## Email Capture Testing\n```bash\n# Test email detection\ncurl -d '{\"message\": \"john.doe@gmail.com for quote\"}'\n\n# Test scheduling request  \ncurl -d '{\"message\": \"schedule inspection, email me\"}'\n```\n\n## Error Handling\n✅ Has `onError: continueRegularOutput`  \n✅ Always returns response even on failure",
        "height": 460,
        "width": 300,
        "color": 1
      },
      "id": "sticky-webhook",
      "name": "Webhook Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [50, 150]
    },
    {
      "parameters": {
        "content": "# 🧠 Enhanced Intent Analysis & Email Detection\n\n## Intent Categories\n- **emergency** → 'urgent' priority → searchCategory: 'emergency'\n- **estimation_request** → 'high' priority → searchCategory: 'pricing'  \n- **contact_sharing** → 'high' priority → No RAG search needed\n- **product_inquiry** → 'normal' priority → searchCategory: 'materials'\n- **installation_inquiry** → 'normal' priority → searchCategory: 'installation'\n- **commercial_inquiry** → 'normal' priority → searchCategory: 'commercial'\n- **climate_inquiry** → 'normal' priority → searchCategory: 'climate'\n- **scheduling** → 'high' priority → Trigger calendar flow\n\n## Email Detection\n- **Pattern**: `/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/`\n- **Triggers**: Sets `has_email: true`, extracts `user_email`\n- **Intent Override**: Email detected → `contact_sharing` intent\n\n## Lead Scoring\n- Emergency: +50 points\n- Estimation: +40 points  \n- Email provided: +25 points\n- Scheduling: +35 points\n- Long message: +5 points\n\n## Output Fields\n- `intent`: Classified intent type\n- `priority`: urgent/high/normal  \n- `search_category`: For vector DB filtering\n- `needs_rag`: Boolean flag\n- `has_email`: Email detected flag\n- `user_email`: Extracted email address\n- `lead_score`: Calculated lead priority",
        "height": 520,
        "width": 340,
        "color": 2
      },
      "id": "sticky-intent",
      "name": "Enhanced Intent Analysis",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [380, 80]
    },
    {
      "parameters": {
        "content": "# 📧 Email Extraction & CRM Preparation\n\n## Email Validation\n- **Validates**: Email format and domain\n- **Cleans**: Removes extra spaces, converts to lowercase\n- **Checks**: Against existing CRM contacts\n\n## Lead Qualification\n```javascript\n// Lead scoring algorithm\nlet leadScore = baseScore;\nif (intent === 'emergency') leadScore += 50;\nif (intent === 'estimation_request') leadScore += 40;\nif (intent === 'scheduling') leadScore += 35;\nif (hasValidEmail) leadScore += 25;\nif (knowledge_confidence > 0.9) leadScore += 10;\n```\n\n## CRM Data Preparation\n```javascript\n{\n  email: validated_email,\n  lead_source: 'AI Chatbot',\n  lead_score: calculated_score,\n  roofing_interest: intent,\n  chat_session_id: session_id,\n  initial_message: message,\n  page_context: context,\n  knowledge_used: has_knowledge\n}\n```\n\n## Triggers Next Steps\n- **High Score (75+)**: Immediate CRM + Slack alert\n- **Medium Score (50-74)**: CRM + Email follow-up\n- **Low Score (<50)**: CRM entry only",
        "height": 460,
        "width": 320,
        "color": 5
      },
      "id": "sticky-email",
      "name": "Email & CRM Logic",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1050, 480]
    },
    {
      "parameters": {
        "content": "# 🏢 HubSpot CRM Integration\n\n## Contact Creation/Update\n**Resource**: Contact  \n**Operation**: Create or Update  \n**Dedupe**: By email address  \n\n## Properties Mapped\n```javascript\n{\n  email: user_email,\n  firstname: extracted_name || 'Chat User',\n  lastname: extracted_lastname || 'Prospect',\n  lead_source: 'AI Chatbot',\n  lead_score: calculated_score,\n  roofing_interest: intent,\n  chat_session_id: session_id,\n  lifecyclestage: 'lead',\n  hs_analytics_source: 'OFFLINE',\n  hs_analytics_source_data_1: 'Alpine Peak Chatbot'\n}\n```\n\n## Custom Properties\n- `chatbot_intent`: User's primary interest\n- `rag_confidence`: Knowledge base match score  \n- `initial_inquiry`: First message content\n- `scheduling_requested`: Boolean flag\n- `emergency_contact`: Urgent priority flag\n\n## Error Handling\n✅ Continues workflow on HubSpot errors  \n✅ Logs failed contacts for manual review  \n✅ Fallback to local database storage",
        "height": 460,
        "width": 320,
        "color": 4
      },
      "id": "sticky-hubspot",
      "name": "HubSpot CRM Details",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1350, 480]
    },
    {
      "parameters": {
        "content": "# 📅 Calendly Email Integration\n\n## Send Calendar Link Email\n**Trigger**: When email captured + scheduling intent  \n**Service**: SMTP or AWS SES  \n**Template**: Professional Alpine Peak branding  \n\n## Email Content\n```html\nSubject: Your Alpine Peak Roofing Inspection - Schedule Now\n\nHi there!\n\nThanks for chatting with our AI assistant about your roofing needs.\n\nSchedule your FREE inspection here:\n🗓️ https://calendly.com/alpinepeakroofing/inspection\n\nOr call us directly: (970) 446-8995\n\nBest regards,\nAlpine Peak Roofing Team\n```\n\n## Calendly Integration Options\n**Option A (Current)**: Send static link  \n**Option B (Future)**: Dynamic booking via API  \n\n## Tracking\n- Email delivery status\n- Link click tracking\n- Booking conversion rate\n- Follow-up scheduling\n\n## Personalization\n- Uses detected name if available\n- References specific roofing interest\n- Includes urgency for emergency cases",
        "height": 460,
        "width": 320,
        "color": 3
      },
      "id": "sticky-calendly",
      "name": "Calendly Email System",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1650, 480]
    },
    {
      "parameters": {
        "content": "# 🤖 Enhanced AI with Lead Capture\n\n## Updated System Prompt\nNow includes lead capture guidelines:\n\n**For Estimates/Scheduling:**\n- \"I'll send you detailed information. What's the best email to reach you?\"\n- \"Perfect! I'll send that to [email] right away.\"\n\n**Email Request Triggers:**\n- Estimation → \"I'll email you a detailed quote\"\n- Emergency → \"Let me send emergency instructions\"  \n- Scheduling → \"I'll send you our availability\"\n- Product info → \"I'll email you material guides\"\n\n**Calendar Integration:**\n- Direct link: https://calendly.com/alpinepeakroofing/inspection\n- \"You can book online or I'll email you the link\"\n\n## Response Enhancement\n- Detects when email provided in conversation\n- Confirms email for follow-up\n- Offers multiple contact options\n- Balances automation with personal touch\n\n## Lead Nurturing Language\n- Professional yet friendly tone\n- Urgency for emergency situations\n- Value proposition emphasis\n- Clear next steps provided",
        "height": 460,
        "width": 320,
        "color": 6
      },
      "id": "sticky-ai-enhanced",
      "name": "AI Lead Capture Prompts",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1150, 100]
    },
    {
      "parameters": {
        "content": "# ⚡ Performance & Lead Metrics\n\n## Expected Latency\n- Intent Analysis: ~10ms (added email regex)\n- Email Extraction: ~5ms\n- HubSpot API: ~200ms\n- Email Send: ~300ms  \n- **Total Addition: ~515ms**\n- **New Total E2E: ~1.5 seconds**\n\n## Lead Capture Goals\n- **Email Capture Rate**: 50%+ of engaged users\n- **CRM Population**: 100% of captured emails\n- **Calendar Bookings**: 25% of scheduled intents\n- **High-Value Leads**: 75+ score immediate alert\n\n## Monitoring Points\n1. Email detection accuracy\n2. HubSpot sync success rate\n3. Email delivery rates\n4. Calendar booking conversion\n5. Lead score distribution\n\n## Common Issues\n- **Email not detected**: Check regex pattern\n- **HubSpot errors**: Verify API credentials\n- **Email bounces**: Validate email domains\n- **Low bookings**: Review calendar link\n\n## A/B Testing Opportunities\n- Email request phrasing\n- Calendar link placement\n- CTA message variations\n- Lead scoring thresholds",
        "height": 460,
        "width": 320,
        "color": 1
      },
      "id": "sticky-performance",
      "name": "Lead Capture Performance",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1750, 100]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "alpine-peak-chatbot-rag",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [200, 300],
      "id": "webhook-trigger",
      "name": "RAG Webhook Trigger",
      "webhookId": "alpine-peak-chatbot-rag",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced intent analysis with email detection and lead scoring\nfor (const item of $input.all()) {\n  const inputData = item.json;\n  \n  if (!inputData.message) {\n    throw new Error('Message is required');\n  }\n  \n  const message = inputData.message.toLowerCase();\n  \n  // Email detection\n  const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/;\n  const emailMatch = inputData.message.match(emailPattern);\n  const hasEmail = emailMatch !== null;\n  const userEmail = hasEmail ? emailMatch[0].toLowerCase().trim() : null;\n  \n  // Name extraction (basic)\n  let extractedName = null;\n  const namePatterns = [\n    /my name is ([a-zA-Z]+)/i,\n    /i'm ([a-zA-Z]+)/i,\n    /call me ([a-zA-Z]+)/i,\n    /this is ([a-zA-Z]+)/i\n  ];\n  \n  for (const pattern of namePatterns) {\n    const nameMatch = inputData.message.match(pattern);\n    if (nameMatch) {\n      extractedName = nameMatch[1];\n      break;\n    }\n  }\n  \n  // Enhanced intent detection with email context\n  let intent = 'general';\n  let priority = 'normal';\n  let searchCategory = null;\n  let leadScore = 10; // Base score\n  \n  // Email sharing intent (highest conversion)\n  if (hasEmail || message.includes('email me') || message.includes('send me')) {\n    intent = 'contact_sharing';\n    priority = 'high';\n    leadScore += 25;\n  }\n  // Emergency detection (highest priority)\n  else if (message.includes('leak') || message.includes('emergency') || message.includes('urgent') || message.includes('storm damage')) {\n    intent = 'emergency';\n    priority = 'urgent';\n    searchCategory = 'emergency';\n    leadScore += 50;\n  }\n  // Estimation requests (high conversion)\n  else if (message.includes('estimate') || message.includes('quote') || message.includes('price') || message.includes('cost')) {\n    intent = 'estimation_request';\n    priority = 'high';\n    searchCategory = 'pricing';\n    leadScore += 40;\n  }\n  // Scheduling requests (high conversion)\n  else if (message.includes('schedule') || message.includes('appointment') || message.includes('inspection') || message.includes('book')) {\n    intent = 'scheduling';\n    priority = 'high';\n    leadScore += 35;\n  }\n  // Material inquiries\n  else if (message.includes('shingle') || message.includes('material') || message.includes('warranty') || message.includes('type')) {\n    intent = 'product_inquiry';\n    priority = 'normal';\n    searchCategory = 'materials';\n    leadScore += 20;\n  }\n  // Installation/repair questions\n  else if (message.includes('install') || message.includes('repair') || message.includes('replace') || message.includes('fix')) {\n    intent = 'installation_inquiry';\n    priority = 'normal';\n    searchCategory = 'installation';\n    leadScore += 25;\n  }\n  // Commercial inquiries\n  else if (message.includes('commercial') || message.includes('tpo') || message.includes('epdm')) {\n    intent = 'commercial_inquiry';\n    priority = 'normal';\n    searchCategory = 'commercial';\n    leadScore += 30;\n  }\n  // Climate/weather related\n  else if (message.includes('hail') || message.includes('snow') || message.includes('winter') || message.includes('colorado')) {\n    intent = 'climate_inquiry';\n    priority = 'normal';\n    searchCategory = 'climate';\n    leadScore += 15;\n  }\n  \n  // Additional lead scoring factors\n  if (hasEmail) leadScore += 25;\n  if (extractedName) leadScore += 10;\n  if (inputData.message.length > 100) leadScore += 5; // Engaged user\n  if (inputData.message.length > 200) leadScore += 5; // Very engaged\n  \n  // Contact data preparation\n  const chatData = {\n    message: inputData.message,\n    session_id: inputData.session_id || 'session_' + Date.now(),\n    page_context: inputData.page_context || 'website',\n    user_data: inputData.user_data || {},\n    timestamp: new Date().toISOString(),\n    ip_address: 'unknown',\n    \n    // Enhanced classification\n    intent: intent,\n    priority: priority,\n    search_category: searchCategory,\n    needs_rag: searchCategory !== null,\n    \n    // Email and contact data\n    has_email: hasEmail,\n    user_email: userEmail,\n    extracted_name: extractedName,\n    \n    // Lead scoring and qualification\n    lead_score: leadScore,\n    requires_crm_update: hasEmail || leadScore >= 50,\n    requires_email_followup: (intent === 'scheduling' || intent === 'estimation_request') && hasEmail,\n    requires_urgent_alert: priority === 'urgent' || leadScore >= 75\n  };\n  \n  return { json: chatData };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 300],
      "id": "enhanced-intent-analysis",
      "name": "Enhanced Intent Analysis",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "model": "text-embedding-ada-002",
        "input": "={{ $json.message + ' Denver Colorado roofing contractor services' }}",
        "options": {}
      },
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [600, 300],
      "id": "generate-query-embedding",
      "name": "Generate Query Embedding",
      "credentials": {
        "openAiApi": {
          "id": "od3qrZGbVE2RSz7J",
          "name": "OpenAi APS account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, title, content, (1 - (embedding <=> $1::vector)) AS similarity, metadata FROM knowledge_base WHERE (1 - (embedding <=> $1::vector)) > 0.78 AND ($2::text IS NULL OR metadata->>'category' = $2::text) ORDER BY embedding <=> $1::vector LIMIT 5",
        "values": "={{ [JSON.stringify($('Generate Query Embedding').item.json.data[0].embedding), $('Enhanced Intent Analysis').item.json.search_category] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [800, 300],
      "id": "vector-knowledge-search",
      "name": "Vector Knowledge Search",
      "credentials": {
        "postgres": {
          "id": "OYphI3uul5xfR5wF",
          "name": "Postgres APS"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Build enhanced RAG context from search results\nconst originalData = $('Enhanced Intent Analysis').item.json;\nconst searchResults = $input.all();\n\nlet ragContext = '';\nlet knowledgeSources = [];\nlet hasRelevantKnowledge = false;\nlet totalSimilarity = 0;\nlet validResults = [];\n\nif (searchResults && searchResults.length > 0) {\n  validResults = searchResults.filter(r => r.json && r.json.similarity > 0.78);\n  \n  if (validResults.length > 0) {\n    hasRelevantKnowledge = true;\n    ragContext += '\\n\\n=== ALPINE PEAK ROOFING KNOWLEDGE BASE ===\\n';\n    \n    validResults.slice(0, 3).forEach((result, index) => {\n      const data = result.json;\n      const similarity = Math.round(data.similarity * 100);\n      \n      ragContext += '\\n' + (index + 1) + '. ' + (data.title || 'Technical Knowledge') + '\\n';\n      ragContext += '   Relevance: ' + similarity + '% match\\n';\n      ragContext += '   Category: ' + (data.metadata?.category || 'General') + '\\n';\n      ragContext += '   Content: ' + data.content + '\\n';\n      \n      knowledgeSources.push({\n        title: data.title,\n        similarity: data.similarity,\n        category: data.metadata?.category\n      });\n      \n      totalSimilarity += data.similarity;\n    });\n    \n    ragContext += '\\n=== END KNOWLEDGE BASE ===\\n\\n';\n    ragContext += 'INSTRUCTION: Use the above Alpine Peak knowledge base information to provide accurate, detailed responses. Reference specific technical details when relevant.\\n\\n';\n  }\n}\n\n// Add emergency context\nif (originalData.intent === 'emergency') {\n  ragContext += '\\n🚨 EMERGENCY ALERT: This is an urgent roofing issue requiring immediate attention. Prioritize safety and emergency response procedures. ALWAYS ask for contact information.\\n\\n';\n}\n\n// Add lead capture context based on intent\nif (originalData.intent === 'estimation_request') {\n  ragContext += '\\n💰 ESTIMATION REQUEST: This user wants pricing information. ALWAYS request their email to send detailed estimates and pricing guides.\\n\\n';\n}\n\nif (originalData.intent === 'scheduling') {\n  ragContext += '\\n📅 SCHEDULING REQUEST: This user wants to book an appointment. Provide calendar link AND request email for confirmation details.\\n\\n';\n}\n\nif (originalData.has_email) {\n  ragContext += '\\n✅ EMAIL CAPTURED: User provided email ' + originalData.user_email + '. Acknowledge this and confirm follow-up details will be sent.\\n\\n';\n}\n\n// Add seasonal context\nconst currentMonth = new Date().getMonth() + 1;\nlet season = '';\nif (currentMonth >= 12 || currentMonth <= 2) season = 'winter';\nelse if (currentMonth >= 3 && currentMonth <= 5) season = 'spring';\nelse if (currentMonth >= 6 && currentMonth <= 8) season = 'summer';\nelse season = 'fall';\n\nif (originalData.search_category === 'climate') {\n  ragContext += '\\n🌤️ SEASONAL CONTEXT: Current season is ' + season + '. Consider seasonal roofing challenges and maintenance needs for Colorado climate.\\n\\n';\n}\n\nreturn {\n  json: {\n    ...originalData,\n    rag_context: ragContext,\n    knowledge_sources: knowledgeSources,\n    has_knowledge: hasRelevantKnowledge,\n    knowledge_confidence: validResults.length > 0 ? totalSimilarity / validResults.length : 0,\n    enhanced_system_prompt: ragContext + '\\n\\nUser Query: ' + originalData.message + '\\nIntent: ' + originalData.intent + '\\nPriority: ' + originalData.priority + '\\nLead Score: ' + originalData.lead_score\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1000, 300],
      "id": "build-rag-context",
      "name": "Build RAG Context",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "complete",
        "model": "gpt-4o-mini",
        "messages": {
          "messageType": "multipleMessages",
          "values": [
            {
              "role": "system",
              "content": "You are Sarah, the AI assistant for Alpine Peak Roofing, Denver's premier roofing contractor with 25+ years of experience.\n\nCOMPANY DETAILS:\n- Location: Denver, Colorado  \n- Phone: (970) 446-8995\n- Emergency: 24/7 availability\n- Services: Residential & Commercial Roofing, Emergency Repairs, Inspections\n- Specialties: Asphalt shingles, Metal roofing, Tile systems, Flat roofing\n- Technology: AI-powered estimator, RAG knowledge system, drone inspections\n- Calendar: https://calendly.com/alpinepeakroofing/inspection\n\n🧠 ENHANCED WITH RAG KNOWLEDGE + LEAD CAPTURE:\nYou have access to Alpine Peak's complete 45,000+ word knowledge base AND lead capture capabilities.\n\n{{ $json.rag_context }}\n\nLEAD CAPTURE GUIDELINES:\n✅ ALWAYS request email for estimates/scheduling: \"I'll send you detailed information. What's the best email to reach you?\"\n✅ When email provided: \"Perfect! I'll send that to {{ $json.user_email || '[your email]' }} right away.\"\n✅ For scheduling: \"You can book directly at https://calendly.com/alpinepeakroofing/inspection or I'll email you the link!\"\n✅ Create urgency: \"This week we have special availability\" or \"Free inspection saves you money\"\n\nEMAIL REQUEST TRIGGERS:\n- Estimation requests → \"I'll email you a detailed quote with material options and pricing\"\n- Emergency situations → \"Let me send you immediate emergency instructions and our 24/7 contact\"\n- Scheduling → \"I'll send you our calendar link and confirmation details\"\n- Product info → \"I'll email you our comprehensive material guides and warranties\"\n- General inquiries → \"I'd love to send you more information about [topic]\"\n\nRESPONSE GUIDELINES:\n✅ ALWAYS prioritize the RAG knowledge context when provided\n✅ Reference specific technical details from the knowledge base\n✅ Professional, knowledgeable, solution-focused tone\n✅ Always prioritize safety for emergencies\n✅ END WITH email request OR confirm email follow-up\n\nLEAD QUALIFICATION PRIORITY:\n1. 🚨 EMERGENCIES: \"Call (970) 446-8995 IMMEDIATELY\" + get email for follow-up\n2. 💰 ESTIMATES: \"I'll prepare a detailed quote - what email should I send it to?\"\n3. 📅 SCHEDULING: \"Book at [calendar link] or share email for scheduling options\"\n4. ℹ️ GENERAL: Provide detailed knowledge + \"I'll email you additional resources\"\n\nCOLORADO EXPERTISE:\n- High altitude effects (5,000+ feet)\n- Hail resistance ratings\n- Snow load requirements  \n- Temperature cycling (-20°F to 100°F+)\n- UV degradation at altitude\n- Chinook wind resistance\n\nCURRENT CONTEXT:\nIntent: {{ $json.intent }}\nPriority: {{ $json.priority }}\nEmail Provided: {{ $json.has_email ? 'Yes - ' + $json.user_email : 'No - Request needed' }}\nKnowledge Available: {{ $json.has_knowledge ? 'Yes' : 'No' }}\nKnowledge Confidence: {{ Math.round(($json.knowledge_confidence || 0) * 100) }}%\nLead Score: {{ $json.lead_score }}/100"
            },
            {
              "role": "user",
              "content": "{{ $json.message }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 600
        }
      },
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [1200, 300],
      "id": "enhanced-ai-response",
      "name": "Enhanced AI Response",
      "credentials": {
        "openAiApi": {
          "id": "od3qrZGbVE2RSz7J",
          "name": "OpenAi APS account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Email extraction and CRM preparation\nconst contextData = $('Build RAG Context').item.json;\n\n// Validate email if provided\nlet validatedEmail = null;\nlet emailValid = false;\n\nif (contextData.has_email && contextData.user_email) {\n  const email = contextData.user_email.toLowerCase().trim();\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  \n  if (emailPattern.test(email)) {\n    validatedEmail = email;\n    emailValid = true;\n  }\n}\n\n// Enhanced lead scoring with knowledge confidence\nlet finalLeadScore = contextData.lead_score;\nif (contextData.has_knowledge && contextData.knowledge_confidence > 0.9) {\n  finalLeadScore += 10; // Bonus for high relevance match\n}\n\n// Determine CRM actions needed\nconst shouldUpdateCRM = emailValid || finalLeadScore >= 50;\nconst shouldSendEmail = emailValid && (contextData.intent === 'scheduling' || contextData.intent === 'estimation_request' || contextData.intent === 'contact_sharing');\nconst shouldAlert = contextData.priority === 'urgent' || finalLeadScore >= 75;\n\n// Prepare CRM data\nconst crmData = {\n  email: validatedEmail,\n  firstname: contextData.extracted_name || 'Chat',\n  lastname: 'User',\n  lead_source: 'AI Chatbot',\n  lead_score: finalLeadScore,\n  roofing_interest: contextData.intent,\n  chat_session_id: contextData.session_id,\n  lifecyclestage: 'lead',\n  initial_message: contextData.message,\n  page_context: contextData.page_context,\n  knowledge_used: contextData.has_knowledge,\n  knowledge_confidence: Math.round((contextData.knowledge_confidence || 0) * 100),\n  chatbot_priority: contextData.priority,\n  created_date: new Date().toISOString()\n};\n\n// Add custom properties based on intent\nswitch (contextData.intent) {\n  case 'emergency':\n    crmData.emergency_contact = true;\n    crmData.contact_priority = 'URGENT';\n    break;\n  case 'estimation_request':\n    crmData.estimate_requested = true;\n    crmData.contact_priority = 'HIGH';\n    break;\n  case 'scheduling':\n    crmData.scheduling_requested = true;\n    crmData.calendly_sent = shouldSendEmail;\n    break;\n  case 'commercial_inquiry':\n    crmData.lead_type = 'Commercial';\n    break;\n  default:\n    crmData.lead_type = 'Residential';\n}\n\nreturn {\n  json: {\n    ...contextData,\n    \n    // Email validation results\n    email_valid: emailValid,\n    validated_email: validatedEmail,\n    \n    // Updated scoring\n    final_lead_score: finalLeadScore,\n    \n    // Action flags\n    should_update_crm: shouldUpdateCRM,\n    should_send_email: shouldSendEmail,\n    should_alert_team: shouldAlert,\n    \n    // CRM data payload\n    crm_data: crmData,\n    \n    // Tracking metadata\n    processing_timestamp: new Date().toISOString(),\n    email_capture_successful: emailValid\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1000, 500],
      "id": "email-extraction-crm",
      "name": "Email Extraction & CRM Prep",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "contact",
        "operation": "create",
        "email": "={{ $json.validated_email }}",
        "additionalFields": {
          "firstname": "={{ $json.crm_data.firstname }}",
          "lastname": "={{ $json.crm_data.lastname }}",
          "customPropertiesToSet": {
            "property": [
              {
                "name": "lead_source",
                "value": "={{ $json.crm_data.lead_source }}"
              },
              {
                "name": "hubspotscore",
                "value": "={{ $json.final_lead_score }}"
              },
              {
                "name": "roofing_interest",
                "value": "={{ $json.crm_data.roofing_interest }}"
              },
              {
                "name": "chat_session_id",
                "value": "={{ $json.crm_data.chat_session_id }}"
              },
              {
                "name": "initial_message",
                "value": "={{ $json.crm_data.initial_message }}"
              },
              {
                "name": "knowledge_confidence",
                "value": "={{ $json.crm_data.knowledge_confidence }}"
              },
              {
                "name": "chatbot_priority",
                "value": "={{ $json.crm_data.chatbot_priority }}"
              }
            ]
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [1400, 500],
      "id": "hubspot-contact-create",
      "name": "HubSpot Contact Create",
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-api-key",
          "name": "HubSpot API"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fromEmail": "hello@alpinepeakroofing.com",
        "fromName": "Alpine Peak Roofing",
        "toEmail": "={{ $('Email Extraction & CRM Prep').item.json.validated_email }}",
        "subject": "Your Alpine Peak Roofing {{ $('Email Extraction & CRM Prep').item.json.intent === 'scheduling' ? 'Inspection' : 'Information' }} - Next Steps",
        "message": "Hi {{ $('Email Extraction & CRM Prep').item.json.crm_data.firstname }},\n\nThanks for chatting with our AI assistant about your roofing needs!\n\nBased on our conversation about {{ $('Email Extraction & CRM Prep').item.json.intent.replace('_', ' ') }}, here are your next steps:\n\n{{ $('Email Extraction & CRM Prep').item.json.intent === 'scheduling' ? '📅 SCHEDULE YOUR FREE INSPECTION:\n🗓️ Book online: https://calendly.com/alpinepeakroofing/inspection\n📞 Or call us: (970) 446-8995\n\n' : '' }}{{ $('Email Extraction & CRM Prep').item.json.intent === 'estimation_request' ? '💰 YOUR ROOFING ESTIMATE:\nWe\\'ll prepare a detailed quote for you! To provide the most accurate estimate, we\\'ll need to schedule a brief inspection.\n\n🗓️ Schedule: https://calendly.com/alpinepeakroofing/inspection\n📞 Call: (970) 446-8995\n\n' : '' }}{{ $('Email Extraction & CRM Prep').item.json.intent === 'emergency' ? '🚨 EMERGENCY SERVICE:\nFor immediate assistance: (970) 446-8995\nOur emergency team is available 24/7 for urgent roofing issues.\n\n' : '' }}Why Choose Alpine Peak Roofing?\n✅ 25+ years serving Denver Metro\n✅ Licensed, bonded & insured  \n✅ FREE detailed inspections\n✅ Colorado climate specialists\n✅ Emergency 24/7 service\n\nQuestions? Just reply to this email or call (970) 446-8995.\n\nBest regards,\nThe Alpine Peak Roofing Team\n📧 hello@alpinepeakroofing.com\n📞 (970) 446-8995\n🌐 www.alpinepeakroofing.com",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [1700, 500],
      "id": "send-calendar-email",
      "name": "Send Calendar Email",
      "credentials": {
        "smtp": {
          "id": "alpine-peak-smtp",
          "name": "Alpine Peak SMTP"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Format comprehensive RAG response with CRM integration\nconst aiResponseData = $input.item.json;\nconst contextData = $('Build RAG Context').item.json;\nconst crmData = $('Email Extraction & CRM Prep').item.json;\n\nlet aiResponse = 'Thank you for your message. We will get back to you soon.';\n\nif (aiResponseData.choices && aiResponseData.choices[0]) {\n  aiResponse = aiResponseData.choices[0].message.content;\n}\n\n// Determine next actions based on intent and email capture\nlet suggestedActions = [];\nlet ctaMessage = '';\n\n// Enhanced CTAs based on email capture status\nswitch (contextData.intent) {\n  case 'emergency':\n    suggestedActions = ['Call (970) 446-8995 immediately', 'Document damage with photos', 'Ensure safety first'];\n    ctaMessage = contextData.has_email ? \n      `🚨 I've sent emergency instructions to ${contextData.user_email}. Call (970) 446-8995 now!` :\n      '🚨 For immediate emergency assistance, call (970) 446-8995 now! Share your email for emergency instructions.';\n    break;\n    \n  case 'estimation_request':\n    suggestedActions = ['Schedule free inspection', 'Get detailed email quote', 'Upload roof photos'];\n    ctaMessage = contextData.has_email ?\n      `📞 Perfect! I'll send your detailed estimate to ${contextData.user_email}. You can also book directly: https://calendly.com/alpinepeakroofing/inspection` :\n      '📞 I\\'ll prepare a detailed estimate for you! What\\'s the best email to send it to?';\n    break;\n    \n  case 'scheduling':\n    suggestedActions = ['Book online inspection', 'Choose preferred time slot', 'Confirm contact details'];\n    ctaMessage = contextData.has_email ?\n      `📅 I've sent you the calendar link at ${contextData.user_email}! You can also book directly: https://calendly.com/alpinepeakroofing/inspection` :\n      '📅 Book your free inspection: https://calendly.com/alpinepeakroofing/inspection or share your email for scheduling options!';\n    break;\n    \n  case 'contact_sharing':\n    suggestedActions = ['Check email for information', 'Schedule consultation', 'Ask follow-up questions'];\n    ctaMessage = contextData.has_email ?\n      `✅ Thanks for your email ${contextData.user_email}! I'll send you detailed information right away.` :\n      '💬 I\\'d love to send you more detailed information! What\\'s your email address?';\n    break;\n    \n  default:\n    suggestedActions = ['Schedule consultation', 'Get more information', 'Ask follow-up questions'];\n    ctaMessage = contextData.has_email ?\n      `💬 I'll send additional resources to ${contextData.user_email}. Any other questions?` :\n      '💬 I\\'d love to send you more information about this topic! What\\'s your email address?';\n}\n\n// Add calendar link if appropriate\nlet calendarLink = null;\nif (contextData.intent === 'scheduling' || contextData.intent === 'estimation_request') {\n  calendarLink = 'https://calendly.com/alpinepeakroofing/inspection';\n}\n\nreturn {\n  json: {\n    success: true,\n    response: {\n      message: aiResponse,\n      type: 'text',\n      timestamp: new Date().toISOString(),\n      session_id: contextData.session_id,\n      cta: ctaMessage,\n      calendar_link: calendarLink,\n      email_requested: !contextData.has_email && (contextData.intent !== 'general'),\n      email_captured: contextData.has_email\n    },\n    metadata: {\n      intent: contextData.intent,\n      priority: contextData.priority,\n      knowledge_used: contextData.has_knowledge,\n      knowledge_confidence: Math.round((contextData.knowledge_confidence || 0) * 100),\n      sources_count: contextData.knowledge_sources?.length || 0,\n      rag_enabled: true,\n      \n      // CRM & Lead capture metadata\n      email_captured: crmData?.email_valid || false,\n      user_email: crmData?.validated_email || null,\n      lead_score: crmData?.final_lead_score || contextData.lead_score,\n      crm_updated: crmData?.should_update_crm || false,\n      email_sent: crmData?.should_send_email || false,\n      team_alerted: crmData?.should_alert_team || false,\n      \n      requires_followup: ['emergency', 'estimation_request', 'scheduling'].includes(contextData.intent)\n    },\n    structured_data: {\n      suggested_actions: suggestedActions,\n      knowledge_sources: contextData.knowledge_sources || [],\n      next_steps: suggestedActions,\n      \n      // Enhanced lead data\n      lead_qualification: {\n        score: crmData?.final_lead_score || contextData.lead_score,\n        priority: contextData.priority,\n        email_provided: contextData.has_email,\n        intent_category: contextData.intent,\n        knowledge_match: contextData.has_knowledge\n      }\n    }\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1400, 300],
      "id": "format-crm-response",
      "name": "Format CRM Response",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [1600, 300],
      "id": "webhook-response",
      "name": "Webhook Response",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $('Email Extraction & CRM Prep').item.json.should_update_crm }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            },
            {
              "leftValue": "={{ $('Email Extraction & CRM Prep').item.json.email_valid }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combineOperation": "all"
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1200, 500],
      "id": "check-crm-conditions",
      "name": "Check CRM Conditions",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $('Email Extraction & CRM Prep').item.json.should_send_email }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combineOperation": "any"
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1500, 500],
      "id": "check-email-conditions", 
      "name": "Check Email Conditions",
      "onError": "continueRegularOutput"
    }
  ],
  "connections": {
    "RAG Webhook Trigger": {
      "main": [
        [
          {
            "node": "Enhanced Intent Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Intent Analysis": {
      "main": [
        [
          {
            "node": "Generate Query Embedding",
            "type": "main",
            "index": 0
          },
          {
            "node": "Email Extraction & CRM Prep",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Query Embedding": {
      "main": [
        [
          {
            "node": "Vector Knowledge Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vector Knowledge Search": {
      "main": [
        [
          {
            "node": "Build RAG Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build RAG Context": {
      "main": [
        [
          {
            "node": "Enhanced AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced AI Response": {
      "main": [
        [
          {
            "node": "Format CRM Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Extraction & CRM Prep": {
      "main": [
        [
          {
            "node": "Check CRM Conditions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check CRM Conditions": {
      "main": [
        [
          {
            "node": "HubSpot Contact Create",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "HubSpot Contact Create": {
      "main": [
        [
          {
            "node": "Check Email Conditions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Email Conditions": {
      "main": [
        [
          {
            "node": "Send Calendar Email",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format CRM Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "rag-crm-v1.0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "alpine-peak-rag-crm-production"
  },
  "tags": ["production", "rag", "chatbot", "crm", "lead-capture", "alpine-peak"]
}