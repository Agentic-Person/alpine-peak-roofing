{
  "name": "alpine-peak-chatbot",
  "nodes": [
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "16420381-a6df-4eef-99c0-a4554dd3b05b",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [
        1248,
        0
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Extract and validate chat message data\\nfor (const item of $input.all()) {\\n  const inputData = item.json;\\n  \\n  // Validate required fields\\n  if (!inputData.message) {\\n    throw new Error('Message is required');\\n  }\\n  \\n  // Extract context and user data\\n  const chatData = {\\n    message: inputData.message,\\n    session_id: inputData.session_id || 'session_' + Date.now(),\\n    page_context: inputData.page_context || 'website',\\n    user_data: inputData.user_data || {},\\n    timestamp: new Date().toISOString(),\\n    ip_address: 'unknown'\\n  };\\n  \\n  // Determine message intent\\n  const message = inputData.message.toLowerCase();\\n  let intent = 'general';\\n  let priority = 'normal';\\n  \\n  // Intent classification\\n  if (message.includes('estimate') || message.includes('quote') || message.includes('price')) {\\n    intent = 'estimation_request';\\n    priority = 'high';\\n  } else if (message.includes('emergency') || message.includes('urgent') || message.includes('leak')) {\\n    intent = 'emergency';\\n    priority = 'urgent';\\n  } else if (message.includes('schedule') || message.includes('appointment') || message.includes('inspection')) {\\n    intent = 'scheduling';\\n    priority = 'high';\\n  } else if (message.includes('material') || message.includes('shingle') || message.includes('warranty')) {\\n    intent = 'product_inquiry';\\n    priority = 'normal';\\n  } else if (message.includes('contact') || message.includes('phone') || message.includes('email')) {\\n    intent = 'contact_info';\\n    priority = 'normal';\\n  }\\n  \\n  // Add classification to data\\n  chatData.intent = intent;\\n  chatData.priority = priority;\\n  \\n  return { json: chatData };\\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        0
      ],
      "id": "20d5bb13-1349-4be7-9c7c-cf377374babb",
      "name": "Message Processing",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Simple response formatting\\nfor (const item of $input.all()) {\\n  const data = item.json;\\n  \\n  let responseMessage = 'Thank you for your message. We will get back to you soon.';\\n  \\n  // Try to get AI response from agent output\\n  if (data.output) {\\n    responseMessage = data.output;\\n  } else if (data.text) {\\n    responseMessage = data.text;\\n  } else if (data.message) {\\n    responseMessage = data.message;\\n  }\\n  \\n  const result = {\\n    success: true,\\n    message: responseMessage,\\n    timestamp: new Date().toISOString()\\n  };\\n  \\n  return { json: result };\\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        928,
        0
      ],
      "id": "826cb12c-54ea-4102-ac66-8578893da6fd",
      "name": "Format Response",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are Sarah, the AI assistant for Alpine Peak Roofing, Denver's premier roofing contractor with 25+ years of experience serving the Denver Metro Area and mountain communities.\n\nCOMPANY DETAILS:\n- Location: Denver, Colorado\n- Phone: (970) 446-8995  \n- Services: Residential & Commercial Roofing, Emergency Repairs, Inspections\n- Specialties: Asphalt shingles, Metal roofing, Tile systems, Flat roofing\n- Technology: AI-powered estimator, automated content system, drone inspections\n\nEXTENSIVE EXPERTISE (45,000+ words of knowledge):\n- All roofing materials: Asphalt (3-tab, architectural, luxury), Metal (standing seam, corrugated, stone-coated), Tile (clay, concrete, slate)\n- Colorado climate challenges: High altitude UV, temperature cycling, snow loads, hail damage, wind resistance, ice dams\n- Installation techniques: Proper nailing, ventilation, flashing, moisture management\n- Seasonal maintenance: Spring storm assessment, summer installations, fall prep, winter emergency response\n- Commercial systems: TPO, EPDM, built-up roofing, maintenance programs\n- Emergency services: Storm damage, leak detection, insurance claims support\n\nRESPONSE GUIDELINES:\n- Professional, knowledgeable, solution-focused tone\n- Always prioritize safety for emergencies\n- For estimates: Ask for address, roof type, issue description, timeline\n- For emergencies: Assess safety, gather details, direct to immediate help\n- Educational responses with relevant technical details\n- End with appropriate call-to-action\n\nLEAD QUALIFICATION PRIORITY:\n1. EMERGENCIES (urgent/leak): \"Call (970) 446-8995 immediately for emergency service\"\n2. ESTIMATES (quote/price): \"Get instant estimate or schedule free inspection\"  \n3. SCHEDULING (appointment/inspection): \"Schedule your free roof inspection\"\n4. GENERAL INFO: Provide detailed technical knowledge, suggest inspection\n\nCOLORADO-SPECIFIC KNOWLEDGE:\n- Denver's 300+ sunny days, semi-arid climate, sudden weather changes\n- Mountain community challenges: extreme temperatures, heavy snow, altitude effects\n- Hail seasons (May-September), Chinook winds, ice dam prevention\n- Local building codes, insurance requirements, material performance at altitude\n\nUse your extensive roofing knowledge to provide accurate, helpful responses while representing Alpine Peak Roofing's expertise and commitment to excellence.\n\nUser Message: {{ $json.message }}\nIntent: {{ $json.intent }}\nPage Context: {{ $json.page_context }}\nPriority: {{ $json.priority }}\n\nProvide a helpful, professional response that demonstrates your expertise and guides the user toward the appropriate next step."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        544,
        0
      ],
      "id": "ef5bb80f-f4ce-4d85-9465-5c64fa07d301",
      "name": "AI Agent",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 500
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        416,
        240
      ],
      "id": "60cf24d8-1d43-4d6a-9098-b202bbef1853",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "od3qrZGbVE2RSz7J",
          "name": "OpenAi APS account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "alpine-peak-chatbot",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -32,
        0
      ],
      "id": "60efb47c-ba54-4216-bb32-b2cad5045e67",
      "name": "Webhook",
      "webhookId": "4759e00b-fadb-4678-9c62-ceed60ebcd55",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        608,
        224
      ],
      "id": "da30db74-3242-4e66-afe9-6165bcc5504b",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "OYphI3uul5xfR5wF",
          "name": "Postgres APS"
        }
      },
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "Message Processing": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Message Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4a311604-bae3-412c-9763-d21510df7770",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "62eb072701814b1a1a9c022b7a751c5f8dac0a37a5a414c436048bc8706d2f6f"
  },
  "id": "Shl9c814VtIiKKKi",
  "tags": []
}